// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace DataAccessLayer.Repositories;

public partial class appDBContext : DbContext
{
    public appDBContext(DbContextOptions<appDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Consumablespurchaseorder> Consumablespurchaseorders { get; set; }

    public virtual DbSet<Consumablesreplacement> Consumablesreplacements { get; set; }

    public virtual DbSet<Consumableswithdrawapplication> Consumableswithdrawapplications { get; set; }

    public virtual DbSet<Sparepart> Spareparts { get; set; }

    public virtual DbSet<Sparepartspurchaseorder> Sparepartspurchaseorders { get; set; }

    public virtual DbSet<Sparepartsreplacement> Sparepartsreplacements { get; set; }

    public virtual DbSet<Sparepartswithdrawapplication> Sparepartswithdrawapplications { get; set; }

    public virtual DbSet<Vehicleconsumable> Vehicleconsumables { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_0900_ai_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<Consumablespurchaseorder>(entity =>
        {
            entity.HasKey(e => e.OrderId).HasName("PRIMARY");

            entity.ToTable("consumablespurchaseorders");

            entity.HasIndex(e => e.ApplicationId, "FK_ConsumablesPurchaseOrders_Applications");

            entity.HasIndex(e => e.RequiredItem, "FK_ConsumablesPurchaseOrders_VehicleConsumables");

            entity.Property(e => e.OrderId).HasColumnName("OrderID");
            entity.Property(e => e.ApplicationId).HasColumnName("ApplicationID");
            entity.Property(e => e.ApprovedByGeneralManager).HasColumnType("bit(1)");
            entity.Property(e => e.ApprovedByGeneralSupervisor).HasColumnType("bit(1)");

            entity.HasOne(d => d.RequiredItemNavigation).WithMany(p => p.Consumablespurchaseorders)
                .HasForeignKey(d => d.RequiredItem)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ConsumablesPurchaseOrders_VehicleConsumables");
        });

        modelBuilder.Entity<Consumablesreplacement>(entity =>
        {
            entity.HasKey(e => e.ReplacementId).HasName("PRIMARY");

            entity.ToTable("consumablesreplacements");

            entity.HasIndex(e => e.MaintenanceId, "FK_ConsumablesReplacements_Maintenance");

            entity.HasIndex(e => e.ConsumableId, "FK_ConsumablesReplacements_VehicleConsumables");

            entity.Property(e => e.ReplacementId).HasColumnName("ReplacementID");
            entity.Property(e => e.ConsumableId).HasColumnName("ConsumableID");
            entity.Property(e => e.MaintenanceId).HasColumnName("MaintenanceID");

            entity.HasOne(d => d.Consumable).WithMany(p => p.Consumablesreplacements)
                .HasForeignKey(d => d.ConsumableId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ConsumablesReplacements_VehicleConsumables");
        });

        modelBuilder.Entity<Consumableswithdrawapplication>(entity =>
        {
            entity.HasKey(e => e.WithdrawApplicationId).HasName("PRIMARY");

            entity.ToTable("consumableswithdrawapplications");

            entity.HasIndex(e => e.ApplicationId, "FK_ConsumablesWithdrawApplications_Applications");

            entity.HasIndex(e => e.ConsumableId, "FK_ConsumablesWithdrawApplications_VehicleConsumables");

            entity.HasIndex(e => e.VehicleId, "FK_ConsumablesWithdrawApplications_Vehicles");

            entity.Property(e => e.WithdrawApplicationId).HasColumnName("WithdrawApplicationID");
            entity.Property(e => e.ApplicationId).HasColumnName("ApplicationID");
            entity.Property(e => e.ApprovedByGeneralManager).HasColumnType("bit(1)");
            entity.Property(e => e.ApprovedByGeneralSupervisor).HasColumnType("bit(1)");
            entity.Property(e => e.ConsumableId).HasColumnName("ConsumableID");
            entity.Property(e => e.VehicleId).HasColumnName("VehicleID");

            entity.HasOne(d => d.Consumable).WithMany(p => p.Consumableswithdrawapplications)
                .HasForeignKey(d => d.ConsumableId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ConsumablesWithdrawApplications_VehicleConsumables");
        });

        modelBuilder.Entity<Sparepart>(entity =>
        {
            entity.HasKey(e => e.SparePartId).HasName("PRIMARY");

            entity.ToTable("spareparts");

            entity.Property(e => e.SparePartId).HasColumnName("SparePartID");
            entity.Property(e => e.PartName)
                .IsRequired()
                .HasMaxLength(100)
                .UseCollation("utf8mb3_general_ci")
                .HasCharSet("utf8mb3");
        });

        modelBuilder.Entity<Sparepartspurchaseorder>(entity =>
        {
            entity.HasKey(e => e.OrderId).HasName("PRIMARY");

            entity.ToTable("sparepartspurchaseorders");

            entity.HasIndex(e => e.ApplicationId, "FK_SparePartsPurchaseOrders_Applications");

            entity.HasIndex(e => e.RequiredItem, "FK_SparePartsPurchaseOrders_SpareParts");

            entity.Property(e => e.OrderId).HasColumnName("OrderID");
            entity.Property(e => e.ApplicationId).HasColumnName("ApplicationID");
            entity.Property(e => e.ApprovedByGeneralManager).HasColumnType("bit(1)");
            entity.Property(e => e.ApprovedByGeneralSupervisor).HasColumnType("bit(1)");

            entity.HasOne(d => d.RequiredItemNavigation).WithMany(p => p.Sparepartspurchaseorders)
                .HasForeignKey(d => d.RequiredItem)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SparePartsPurchaseOrders_SpareParts");
        });

        modelBuilder.Entity<Sparepartsreplacement>(entity =>
        {
            entity.HasKey(e => e.ReplacementId).HasName("PRIMARY");

            entity.ToTable("sparepartsreplacements");

            entity.HasIndex(e => e.MaintenanceId, "FK_SparePartsReplacements_Maintenance");

            entity.HasIndex(e => e.SparePartId, "FK_SparePartsReplacements_SpareParts");

            entity.Property(e => e.ReplacementId).HasColumnName("ReplacementID");
            entity.Property(e => e.MaintenanceId).HasColumnName("MaintenanceID");
            entity.Property(e => e.SparePartId).HasColumnName("SparePartID");

            entity.HasOne(d => d.SparePart).WithMany(p => p.Sparepartsreplacements)
                .HasForeignKey(d => d.SparePartId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SparePartsReplacements_SpareParts");
        });

        modelBuilder.Entity<Sparepartswithdrawapplication>(entity =>
        {
            entity.HasKey(e => e.WithdrawApplicationId).HasName("PRIMARY");

            entity.ToTable("sparepartswithdrawapplications");

            entity.HasIndex(e => e.ApplicationId, "FK_SparePartsWithdrawApplications_Applications");

            entity.HasIndex(e => e.SparePartId, "FK_SparePartsWithdrawApplications_SpareParts");

            entity.HasIndex(e => e.VehicleId, "FK_SparePartsWithdrawApplications_Vehicles");

            entity.Property(e => e.WithdrawApplicationId).HasColumnName("WithdrawApplicationID");
            entity.Property(e => e.ApplicationId).HasColumnName("ApplicationID");
            entity.Property(e => e.ApprovedByGeneralManager).HasColumnType("bit(1)");
            entity.Property(e => e.ApprovedByGeneralSupervisor).HasColumnType("bit(1)");
            entity.Property(e => e.SparePartId).HasColumnName("SparePartID");
            entity.Property(e => e.VehicleId).HasColumnName("VehicleID");

            entity.HasOne(d => d.SparePart).WithMany(p => p.Sparepartswithdrawapplications)
                .HasForeignKey(d => d.SparePartId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SparePartsWithdrawApplications_SpareParts");
        });

        modelBuilder.Entity<Vehicleconsumable>(entity =>
        {
            entity.HasKey(e => e.ConsumableId).HasName("PRIMARY");

            entity.ToTable("vehicleconsumables");

            entity.Property(e => e.ConsumableId).HasColumnName("ConsumableID");
            entity.Property(e => e.ConsumableName)
                .IsRequired()
                .HasMaxLength(100)
                .UseCollation("utf8mb3_general_ci")
                .HasCharSet("utf8mb3");
            entity.Property(e => e.ValidityLength).HasColumnName("validityLength");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}